{"version":3,"sources":["js/fetchFunctions.js","js/DOMElements.js","js/filters.js","js/DOMActions.js","js/Item.js","js/onScroll.js","js/sort.js","js/index.js"],"names":["baseURL","prefix","fetchPage","keyword","page","res","fetch","data","json","error","console","log","fetchItemById","id","inputField","document","getElementById","submitButton","resultsInfo","sortBySelect","yearInput","ratingInput","resetFiltersButton","showFiltersButton","filtersForm","resultsList","loader","messageBottom","filter","items","querySelectorAll","yearValue","value","ratingValue","forEach","item","itemYearValue","getAttribute","itemRatingValue","isNaN","parseFloat","includes","classList","remove","add","resetFilters","addEventListener","event","preventDefault","resetLayout","innerText","clearResultsList","innerHTML","showLoader","hideLoader","displayMessage","message","field","toggleFilters","toggle","renderItems","dataArr","start","stop","slice","Math","min","length","renderItem","Title","title","Poster","image","Year","year","imdbRating","rating","Plot","Awards","awards","Genre","genre","Runtime","runtime","totalSeasons","plot","shortenedPlot","substring","lastIndexOf","listEl","createElement","setAttribute","appendChild","imgWrapper","txtWrapper","overlayDiv","seasonsType","seasonsDesc","runtimeType","runtimeDesc","plotType","plotDesc","imgEl","ratingSpan","titlePar","titleInfo","split","join","awardsSpan","awardsType","awardsDesc","handleOnScroll","maxScrollingDistance","documentElement","scrollHeight","window","innerHeight","scrolledDistance","scrollY","ceil","addActionOnScroll","removeActionOnScroll","removeEventListener","sortBy","sortingBy","itemsToSort","sortedItems","sort","a","b","localeCompare","ratingA","ratingB","dateA","Date","Released","dateB","ITEMS_PER_PAGE_APP","state","resetState","currPageApp","currPageAPI","totalResults","renderPage","isNextFetchNeeded","newData","isNextFetchPossible","fetchedData","parseInt","response","Response","Search","nextFetchedData","extendedData","Promise","all","map","imdbID"],"mappings":"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","file":"js.814c870b.js","sourceRoot":"..","sourcesContent":["export const baseURL = \"https://www.omdbapi.com/?apikey=4cdcc311\";\r\nexport const prefix = \"https://cors-anywhere.herokuapp.com/\";\r\n\r\nexport const fetchPage = async (keyword, page = 1) => {\r\n  try {\r\n    const res = await fetch(\r\n      `${prefix}${baseURL}&type=series&page=${page}&s=${keyword}`\r\n    );\r\n    const data = await res.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchItemById = async id => {\r\n  try {\r\n    const res = await fetch(`${baseURL}&plot=full&i=${id}`);\r\n    const data = await res.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","// Search input and submit button\r\nexport const inputField = document.getElementById(\"input-field\");\r\nexport const submitButton = document.getElementById(\"submit-button\");\r\n\r\n// Results nav\r\nexport const resultsInfo = document.getElementById(\"results-info\");\r\nexport const sortBySelect = document.getElementById(\"sort-by\");\r\n\r\n// Filters inputs and reset filters button\r\nexport const yearInput = document.getElementById(\"year-input\");\r\nexport const ratingInput = document.getElementById(\"rating-input\");\r\nexport const resetFiltersButton = document.getElementById(\"reset-filters\");\r\nexport const showFiltersButton = document.getElementById(\"show-filters\");\r\nexport const filtersForm = document.getElementById(\"form-filters\");\r\n\r\n// Results list\r\nexport const resultsList = document.getElementById(\"results\");\r\n\r\n// Loader\r\nexport const loader = document.getElementById(\"loader\");\r\n\r\n// Bottom message\r\nexport const messageBottom = document.getElementById(\"message-bottom\");\r\n\r\n// Filters form\r\n","import { yearInput, ratingInput, resetFiltersButton } from \"./DOMElements\";\r\n\r\nexport const filter = () => {\r\n  const items = document.querySelectorAll(\".list-element\");\r\n  const yearValue = yearInput.value;\r\n  const ratingValue = ratingInput.value ? ratingInput.value : 0;\r\n  items.forEach(item => {\r\n    const itemYearValue = item.getAttribute(\"data-year\");\r\n    const itemRatingValue = !isNaN(item.getAttribute(\"data-rating\"))\r\n      ? parseFloat(item.getAttribute(\"data-rating\"))\r\n      : 0;\r\n    if (itemYearValue.includes(yearValue) && itemRatingValue >= ratingValue) {\r\n      item.classList.remove(\"hidden\");\r\n    } else {\r\n      item.classList.add(\"hidden\");\r\n    }\r\n  });\r\n};\r\n\r\nexport const resetFilters = () => {\r\n  yearInput.value = \"\";\r\n  ratingInput.value = \"\";\r\n  filter();\r\n};\r\n\r\nyearInput.addEventListener(\"keyup\", filter);\r\nratingInput.addEventListener(\"keyup\", filter);\r\nresetFiltersButton.addEventListener(\"click\", () => {\r\n  event.preventDefault();\r\n  resetFilters();\r\n});\r\n","import {\r\n  resultsList,\r\n  resultsInfo,\r\n  loader,\r\n  sortBySelect,\r\n  messageBottom,\r\n  showFiltersButton,\r\n  filtersForm\r\n} from \"./DOMElements\";\r\nimport { resetFilters } from \"./filters\";\r\n\r\nexport const resetLayout = () => {\r\n  resultsInfo.innerText = \"\";\r\n  messageBottom.innerText = \"\";\r\n  messageBottom.classList.add(\"hidden\");\r\n  clearResultsList();\r\n  resetFilters();\r\n  sortBySelect.value = \"Default\";\r\n};\r\n\r\nexport const clearResultsList = () => {\r\n  resultsList.innerHTML = \"\";\r\n};\r\n\r\nexport const showLoader = () => {\r\n  resultsList.classList.remove(\"items--empty\");\r\n  loader.classList.remove(\"hidden\");\r\n};\r\n\r\nexport const hideLoader = () => {\r\n  loader.classList.add(\"hidden\");\r\n};\r\n\r\nexport const displayMessage = (message, field) => {\r\n  field.innerText = message;\r\n  field.classList.remove(\"hidden\");\r\n};\r\n\r\nexport const toggleFilters = () => {\r\n  filtersForm.classList.toggle(\"hidden\");\r\n};\r\n\r\nshowFiltersButton.addEventListener(\"click\", toggleFilters);\r\n","import { resultsList } from \"./DOMElements\";\r\n\r\nexport const renderItems = (dataArr, start, stop) => {\r\n  dataArr\r\n    .slice(start, Math.min(stop, dataArr.length))\r\n    .forEach(item => renderItem(item));\r\n};\r\n\r\nexport const renderItem = ({\r\n  Title: title,\r\n  Poster: image,\r\n  Year: year = \"N.D.\",\r\n  imdbRating: rating = \"N.D.\",\r\n  Plot,\r\n  Awards: awards,\r\n  Genre: genre = \"N.D.\",\r\n  Runtime: runtime = \"N.D.\",\r\n  totalSeasons = \"N.D.\"\r\n}) => {\r\n  // Shortening plot to max 100 characters\r\n  let plot;\r\n  if (Plot.length <= 100) {\r\n    plot = Plot;\r\n  } else if (Plot === \"N/A\") {\r\n    plot = \"Description not available.\";\r\n  } else {\r\n    const shortenedPlot = Plot.substring(0, 100);\r\n    const formatedPlot = `${shortenedPlot.substring(\r\n      0,\r\n      shortenedPlot.lastIndexOf(\" \")\r\n    )} [...]`;\r\n    plot = formatedPlot;\r\n  }\r\n\r\n  // Creating DOM elements\r\n  const listEl = document.createElement(\"li\");\r\n  listEl.setAttribute(\"data-year\", year.substring(0, 4));\r\n  listEl.setAttribute(\"data-rating\", rating);\r\n  listEl.classList.add(\"list-element\");\r\n\r\n  const item = document.createElement(\"div\");\r\n  item.classList.add(\"item\");\r\n  listEl.appendChild(item);\r\n\r\n  const imgWrapper = document.createElement(\"div\");\r\n  imgWrapper.classList.add(\"item__image-wrapper\");\r\n  item.appendChild(imgWrapper);\r\n\r\n  const txtWrapper = document.createElement(\"div\");\r\n  txtWrapper.classList.add(\"item__text-wrapper\");\r\n  item.appendChild(txtWrapper);\r\n\r\n  // Overlay\r\n  const overlayDiv = document.createElement(\"div\");\r\n  overlayDiv.classList.add(\"item__overlay\");\r\n  imgWrapper.appendChild(overlayDiv);\r\n\r\n  const seasonsType = document.createElement(\"p\");\r\n  seasonsType.classList.add(\"item__type\");\r\n  seasonsType.innerText = \"Total seasons:\";\r\n  overlayDiv.appendChild(seasonsType);\r\n\r\n  const seasonsDesc = document.createElement(\"p\");\r\n  seasonsDesc.classList.add(\"item__desc\");\r\n  seasonsDesc.innerText = totalSeasons;\r\n  overlayDiv.appendChild(seasonsDesc);\r\n\r\n  const runtimeType = document.createElement(\"p\");\r\n  runtimeType.classList.add(\"item__type\");\r\n  runtimeType.innerText = \"Runtime:\";\r\n  overlayDiv.appendChild(runtimeType);\r\n\r\n  const runtimeDesc = document.createElement(\"p\");\r\n  runtimeDesc.classList.add(\"item__desc\");\r\n  runtimeDesc.innerText = runtime;\r\n  overlayDiv.appendChild(runtimeDesc);\r\n\r\n  const plotType = document.createElement(\"p\");\r\n  plotType.classList.add(\"item__type\");\r\n  plotType.innerText = \"Plot:\";\r\n  overlayDiv.appendChild(plotType);\r\n\r\n  const plotDesc = document.createElement(\"p\");\r\n  plotDesc.classList.add(\"item__desc\");\r\n  plotDesc.innerText = plot;\r\n  overlayDiv.appendChild(plotDesc);\r\n\r\n  // Img wrapper\r\n  const imgEl = document.createElement(\"img\");\r\n  imgEl.classList.add(\"item__image\");\r\n  imgEl.setAttribute(\"src\", image);\r\n  imgEl.setAttribute(\r\n    \"onerror\",\r\n    \"this.src ='https://dummyimage.com/250x375/000/fff.jpg&text=No+image+avalaible';\"\r\n  );\r\n  imgEl.setAttribute(\"alt\", title);\r\n  imgWrapper.appendChild(imgEl);\r\n\r\n  const ratingSpan = document.createElement(\"span\");\r\n  ratingSpan.classList.add(\"item__rating\");\r\n  ratingSpan.innerText = rating;\r\n  imgWrapper.appendChild(ratingSpan);\r\n\r\n  // Txt wrapper\r\n  const titlePar = document.createElement(\"p\");\r\n  titlePar.classList.add(\"item__title\");\r\n  titlePar.innerText = title;\r\n  txtWrapper.appendChild(titlePar);\r\n\r\n  const titleInfo = document.createElement(\"p\");\r\n  titleInfo.classList.add(\"item__title-info\");\r\n  titleInfo.innerText = `${year.substring(0, 4)} | ${genre\r\n    .split(\",\")\r\n    .slice(0, 2)\r\n    .join(\",\")}`;\r\n  txtWrapper.appendChild(titleInfo);\r\n\r\n  if (awards !== \"N/A\") {\r\n    const awardsSpan = document.createElement(\"span\");\r\n    awardsSpan.classList.add(\"item__award\");\r\n    awardsSpan.innerHTML = '<i class=\"fas fa-trophy\"></i>';\r\n    imgWrapper.appendChild(awardsSpan);\r\n\r\n    const awardsType = document.createElement(\"p\");\r\n    awardsType.classList.add(\"item__type\");\r\n    awardsType.innerText = \"Awards:\";\r\n    overlayDiv.appendChild(awardsType);\r\n\r\n    const awardsDesc = document.createElement(\"p\");\r\n    awardsDesc.classList.add(\"item__desc\");\r\n    awardsDesc.innerText = awards;\r\n    overlayDiv.appendChild(awardsDesc);\r\n  }\r\n\r\n  resultsList.appendChild(listEl);\r\n};\r\n","import { renderPage as callback } from \"./index\";\r\n\r\nexport const handleOnScroll = () => {\r\n  const maxScrollingDistance =\r\n    document.documentElement.scrollHeight - window.innerHeight;\r\n  const scrolledDistance = window.scrollY;\r\n  if (Math.ceil(scrolledDistance) === maxScrollingDistance) {\r\n    callback();\r\n  }\r\n};\r\n\r\nexport const addActionOnScroll = () => {\r\n  window.addEventListener(\"scroll\", handleOnScroll);\r\n};\r\n\r\nexport const removeActionOnScroll = () => {\r\n  window.removeEventListener(\"scroll\", handleOnScroll);\r\n};\r\n","export const sortBy = (items, sortingBy) => {\r\n  const itemsToSort = [...items];\r\n  let sortedItems;\r\n  switch (sortingBy) {\r\n    case \"Z-A\":\r\n      sortedItems = itemsToSort.sort((a, b) => b.Title.localeCompare(a.Title));\r\n      break;\r\n    case \"A-Z\":\r\n      sortedItems = itemsToSort.sort((a, b) => a.Title.localeCompare(b.Title));\r\n      break;\r\n    case \"Highest rating\":\r\n      sortedItems = itemsToSort.sort((a, b) => {\r\n        const ratingA = !isNaN(a.imdbRating) ? parseFloat(a.imdbRating) : 0;\r\n        const ratingB = !isNaN(b.imdbRating) ? parseFloat(b.imdbRating) : 0;\r\n        return ratingB - ratingA;\r\n      });\r\n      break;\r\n    case \"Lowest rating\":\r\n      sortedItems = itemsToSort.sort((a, b) => {\r\n        const ratingA = !isNaN(a.imdbRating) ? parseFloat(a.imdbRating) : 0;\r\n        const ratingB = !isNaN(b.imdbRating) ? parseFloat(b.imdbRating) : 0;\r\n        return ratingA - ratingB;\r\n      });\r\n      break;\r\n    case \"Earliest release\":\r\n      sortedItems = itemsToSort.sort((a, b) => {\r\n        const dateA = new Date(a.Released);\r\n        const dateB = new Date(b.Released);\r\n        return dateA - dateB;\r\n      });\r\n      break;\r\n    case \"Latest release\":\r\n      sortedItems = itemsToSort.sort((a, b) => {\r\n        const dateA = new Date(a.Released);\r\n        const dateB = new Date(b.Released);\r\n        return dateB - dateA;\r\n      });\r\n      break;\r\n    default:\r\n      sortedItems = itemsToSort;\r\n      break;\r\n  }\r\n  return sortedItems;\r\n};\r\n","import { fetchPage, fetchItemById } from \"./fetchFunctions\";\r\nimport {\r\n  resetLayout,\r\n  showLoader,\r\n  hideLoader,\r\n  displayMessage,\r\n  clearResultsList\r\n} from \"./DOMActions\";\r\nimport {\r\n  inputField,\r\n  submitButton,\r\n  sortBySelect,\r\n  resultsInfo,\r\n  messageBottom,\r\n  resultsList\r\n} from \"./DOMElements\";\r\nimport { renderItems } from \"./Item\";\r\nimport { addActionOnScroll, removeActionOnScroll } from \"./onScroll\";\r\nimport \"./filters\";\r\nimport { filter } from \"./filters\";\r\nimport { sortBy } from \"./sort\";\r\n\r\nconst ITEMS_PER_PAGE_APP = 12;\r\n\r\nlet state;\r\n\r\nconst resetState = () => {\r\n  state = {\r\n    currPageApp: 0,\r\n    currPageAPI: 0,\r\n    keyword: \"\",\r\n    items: [],\r\n    totalResults: null\r\n  };\r\n};\r\n\r\nresetState();\r\n\r\nsubmitButton.addEventListener(\"click\", () => {\r\n  event.preventDefault();\r\n  if (inputField.value) {\r\n    resetLayout();\r\n    resetState();\r\n    state.keyword = inputField.value;\r\n    renderPage();\r\n  } else {\r\n    return;\r\n  }\r\n});\r\n\r\nsortBySelect.addEventListener(\"change\", () => {\r\n  clearResultsList();\r\n  clearResultsList();\r\n  renderItems(\r\n    sortBy(state.items, sortBySelect.value),\r\n    0,\r\n    state.currPageApp * ITEMS_PER_PAGE_APP\r\n  );\r\n  filter();\r\n});\r\n\r\nconst isNextFetchNeeded = (totalResults, newData, currPageApp, items) => {\r\n  return (\r\n    Math.min(currPageApp * ITEMS_PER_PAGE_APP, totalResults) >\r\n    items.length + newData.length\r\n  );\r\n};\r\n\r\nconst isNextFetchPossible = (fetchedData, totalResults) => {\r\n  return parseInt(totalResults) >= fetchedData.length;\r\n};\r\n\r\nexport const renderPage = async () => {\r\n  showLoader();\r\n\r\n  try {\r\n    // Preventing multiple call and further request for non-existing page\r\n    removeActionOnScroll(renderPage);\r\n\r\n    // Copying state\r\n    let { currPageApp, currPageAPI, items, keyword, totalResults } = state;\r\n\r\n    currPageApp++;\r\n\r\n    switch (items.length) {\r\n      // All avalaible data is already fetched\r\n      case parseInt(totalResults):\r\n        state = { ...state, currPageApp };\r\n        break;\r\n\r\n      // Fetching new data\r\n      default:\r\n        let response = await fetchPage(keyword, ++currPageAPI);\r\n        switch (response.Response) {\r\n          case \"True\":\r\n            // Setting total results if the first fetch\r\n            if (!totalResults) {\r\n              totalResults = response.totalResults;\r\n              displayMessage(\r\n                `Found ${totalResults} results for '${keyword}'`,\r\n                resultsInfo\r\n              );\r\n            }\r\n\r\n            let { Search: fetchedData } = response;\r\n\r\n            // Fetch more data if needed\r\n            if (\r\n              isNextFetchNeeded(\r\n                totalResults,\r\n                fetchedData,\r\n                currPageApp,\r\n                items\r\n              ) &&\r\n              isNextFetchPossible(fetchedData, totalResults)\r\n            ) {\r\n              const { Search: nextFetchedData } = await fetchPage(\r\n                keyword,\r\n                ++currPageAPI\r\n              );\r\n              fetchedData = [...fetchedData, ...nextFetchedData];\r\n            }\r\n\r\n            // Fetch additional info for every item\r\n            const extendedData = await Promise.all(\r\n              fetchedData.map(item => fetchItemById(item.imdbID))\r\n            );\r\n\r\n            items = [...items, ...extendedData];\r\n\r\n            if (isNextFetchPossible(fetchedData, totalResults)) {\r\n              addActionOnScroll(renderPage);\r\n            }\r\n            state = { ...state, currPageAPI, currPageApp, items, totalResults };\r\n            break;\r\n          case \"False\":\r\n            displayMessage(\r\n              `Your search \"${state.keyword}\" did not match any series. Please try again.`,\r\n              resultsList\r\n            );\r\n            hideLoader();\r\n            return;\r\n        }\r\n    }\r\n\r\n    switch (sortBySelect.value) {\r\n      // Adding only new items if sorting is inactive\r\n      case \"Default\":\r\n        renderItems(\r\n          items,\r\n          (currPageApp - 1) * ITEMS_PER_PAGE_APP,\r\n          Math.min(currPageApp * ITEMS_PER_PAGE_APP, totalResults)\r\n        );\r\n        break;\r\n      // Re-rendering results list if sorting is active\r\n      default:\r\n        clearResultsList();\r\n        renderItems(\r\n          sortBy(items, sortBySelect.value),\r\n          0,\r\n          Math.min(currPageApp * ITEMS_PER_PAGE_APP, totalResults)\r\n        );\r\n        break;\r\n    }\r\n\r\n    filter();\r\n\r\n    displayMessage(\r\n      `Showing ${Math.min(\r\n        currPageApp * ITEMS_PER_PAGE_APP,\r\n        items.length\r\n      )} of ${totalResults} total results`,\r\n      messageBottom\r\n    );\r\n  } catch (error) {\r\n    console.log(error);\r\n    resetLayout();\r\n    displayMessage(\r\n      \"Oops! Something went wrong. Please try again\",\r\n      messageBottom\r\n    );\r\n  }\r\n\r\n  hideLoader();\r\n};\r\n"]}